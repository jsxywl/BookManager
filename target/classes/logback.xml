<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="2 seconds">

	<!--指定日志文件输出路径为项目下log文件夹下，根据自己实际情况指定 -->
	<!-- 设置变量： <property>用来定义变量值的标签，<property> 有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。 
		通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量 -->
	<!-- <property name="logback.logs.path" value="D:\\log\\mylog\\log"></property> -->

	<appender name="ROLLING"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logback.logs.path}/STDOUT.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>${logback.logs.path}/STDOUT-%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<!-- 记录30天 -->
			<maxHistory>30</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder charset="UTF-8">
			<pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n
			</pattern>
		</encoder>
	</appender>


	<!-- log output to console -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="UTF-8">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{50} - %line -
				%msg%n</pattern>
		</encoder>
	</appender>

	<!-- name指定具体哪个包下java类(可以是类全路径，可以使包名)想打印日志，level指定级别，appender-ref对应是控制台输出 
		还是文件输出 additivity是否将本文件的日志打印任务同时交给上一级，默认为true(会打印多次) -->



	<!-- <loger> 用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。 
		name: 用来指定受此loger约束的某一个包或者具体的某一个类。 level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, 
		WARN, ERROR, ALL 和 OFF，还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。 -->
	<logger name="com.rbao.east.mapper" level="TRACE">
		<appender-ref ref="ROLLING" />
		<appender-ref ref="STDOUT" />
	</logger>

	<!-- logback日志级别有：TRACE, DEBUG, INFO, WARN, ERROR ,ALL,OFF 不区分大小写 -->
	<root level="DEBUG">
		<appender-ref ref="ROLLING" />
		<appender-ref ref="STDOUT" />
	</root>



</configuration>